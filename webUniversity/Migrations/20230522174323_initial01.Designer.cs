// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using webUniversity.Models;

#nullable disable

namespace webUniversity.Migrations
{
    [DbContext(typeof(UniversityContext))]
    [Migration("20230522174323_initial01")]
    partial class initial01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("webUniversity.Models.ControlForm", b =>
                {
                    b.Property<int?>("controlFormID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("controlFormID"));

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("controlFormID");

                    b.ToTable("ControlForms");
                });

            modelBuilder.Entity("webUniversity.Models.ControlPeriod", b =>
                {
                    b.Property<int?>("controlPeriodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("controlPeriodID"));

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("index")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("controlPeriodID");

                    b.ToTable("ControlPeriods");
                });

            modelBuilder.Entity("webUniversity.Models.Course", b =>
                {
                    b.Property<int?>("courseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("courseID"));

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("index")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("courseID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("webUniversity.Models.Discipline", b =>
                {
                    b.Property<int?>("disciplineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("disciplineID"));

                    b.Property<string>("addName")
                        .HasColumnType("text");

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("fullName")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("disciplineID");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("webUniversity.Models.Faculty", b =>
                {
                    b.Property<int?>("facultyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("facultyID"));

                    b.Property<string>("addName")
                        .HasColumnType("text");

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("facultyID");

                    b.ToTable("Facultys");
                });

            modelBuilder.Entity("webUniversity.Models.Group", b =>
                {
                    b.Property<int?>("groupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("groupID"));

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("groupID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("webUniversity.Models.Mark", b =>
                {
                    b.Property<int?>("markID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("markID"));

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("markID");

                    b.ToTable("Marks");
                });

            modelBuilder.Entity("webUniversity.Models.OrderType", b =>
                {
                    b.Property<int?>("orderTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("orderTypeID"));

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("orderTypeID");

                    b.ToTable("OrderType");
                });

            modelBuilder.Entity("webUniversity.Models.Orders", b =>
                {
                    b.Property<int?>("ordersID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("ordersID"));

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<int?>("data")
                        .HasColumnType("integer");

                    b.Property<int?>("dataEnd")
                        .HasColumnType("integer");

                    b.Property<int?>("dataStart")
                        .HasColumnType("integer");

                    b.Property<bool?>("isImplemented")
                        .HasColumnType("boolean");

                    b.Property<string>("number")
                        .HasColumnType("text");

                    b.Property<int>("orderTypeID")
                        .HasColumnType("integer");

                    b.Property<int>("studentID")
                        .HasColumnType("integer");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.HasKey("ordersID");

                    b.HasIndex("orderTypeID");

                    b.HasIndex("studentID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("webUniversity.Models.Professor", b =>
                {
                    b.Property<int?>("professorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("professorID"));

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("professorID");

                    b.ToTable("Professors");
                });

            modelBuilder.Entity("webUniversity.Models.Speciality", b =>
                {
                    b.Property<int?>("specialityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("specialityID"));

                    b.Property<string>("addName")
                        .HasColumnType("text");

                    b.Property<string>("branchScience")
                        .HasColumnType("text");

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("largeGroup")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("specialityCode")
                        .HasColumnType("text");

                    b.HasKey("specialityID");

                    b.ToTable("Specialitys");
                });

            modelBuilder.Entity("webUniversity.Models.Specialization", b =>
                {
                    b.Property<int?>("specializationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("specializationID"));

                    b.Property<string>("addName")
                        .HasColumnType("text");

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<int>("specialityID")
                        .HasColumnType("integer");

                    b.Property<string>("specializationCode")
                        .HasColumnType("text");

                    b.HasKey("specializationID");

                    b.HasIndex("specialityID");

                    b.ToTable("Specializations");
                });

            modelBuilder.Entity("webUniversity.Models.Statement", b =>
                {
                    b.Property<int?>("statementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("statementID"));

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<int>("controlFormID")
                        .HasColumnType("integer");

                    b.Property<int>("controlPeriodID")
                        .HasColumnType("integer");

                    b.Property<int?>("date")
                        .HasColumnType("integer");

                    b.Property<int>("disciplineID")
                        .HasColumnType("integer");

                    b.Property<bool?>("isIndividual")
                        .HasColumnType("boolean");

                    b.Property<int>("markID")
                        .HasColumnType("integer");

                    b.Property<int>("professorID")
                        .HasColumnType("integer");

                    b.Property<int>("statementTypeID")
                        .HasColumnType("integer");

                    b.Property<int>("studentID")
                        .HasColumnType("integer");

                    b.Property<int?>("timeEnd")
                        .HasColumnType("integer");

                    b.Property<int?>("timeStart")
                        .HasColumnType("integer");

                    b.HasKey("statementID");

                    b.HasIndex("controlFormID");

                    b.HasIndex("controlPeriodID");

                    b.HasIndex("disciplineID");

                    b.HasIndex("markID");

                    b.HasIndex("professorID");

                    b.HasIndex("statementTypeID");

                    b.HasIndex("studentID");

                    b.ToTable("Statements");
                });

            modelBuilder.Entity("webUniversity.Models.StatementType", b =>
                {
                    b.Property<int?>("statementTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("statementTypeID"));

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("statementTypeID");

                    b.ToTable("StatementTypes");
                });

            modelBuilder.Entity("webUniversity.Models.Student", b =>
                {
                    b.Property<int?>("studentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("studentID"));

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<int>("courseID")
                        .HasColumnType("integer");

                    b.Property<int>("facultyID")
                        .HasColumnType("integer");

                    b.Property<string>("firstName")
                        .HasColumnType("text");

                    b.Property<string>("gradebook")
                        .HasColumnType("text");

                    b.Property<int>("groupID")
                        .HasColumnType("integer");

                    b.Property<string>("lastName")
                        .HasColumnType("text");

                    b.Property<string>("patronomic")
                        .HasColumnType("text");

                    b.Property<int>("specialityID")
                        .HasColumnType("integer");

                    b.Property<int>("specializationID")
                        .HasColumnType("integer");

                    b.Property<int>("studentStatusID")
                        .HasColumnType("integer");

                    b.Property<int>("trainingLevelID")
                        .HasColumnType("integer");

                    b.Property<int>("tuitionFormID")
                        .HasColumnType("integer");

                    b.Property<int>("tuitionTypeID")
                        .HasColumnType("integer");

                    b.Property<int>("userID")
                        .HasColumnType("integer");

                    b.HasKey("studentID");

                    b.HasIndex("courseID");

                    b.HasIndex("facultyID");

                    b.HasIndex("groupID");

                    b.HasIndex("specialityID");

                    b.HasIndex("specializationID");

                    b.HasIndex("studentStatusID");

                    b.HasIndex("trainingLevelID");

                    b.HasIndex("tuitionFormID");

                    b.HasIndex("tuitionTypeID");

                    b.HasIndex("userID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("webUniversity.Models.StudentStatus", b =>
                {
                    b.Property<int?>("studentStatusTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("studentStatusTypeID"));

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("studentStatusTypeID");

                    b.ToTable("StudentStatuss");
                });

            modelBuilder.Entity("webUniversity.Models.TrainingLevel", b =>
                {
                    b.Property<int?>("trainingLevelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("trainingLevelID"));

                    b.Property<string>("addName")
                        .HasColumnType("text");

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("trainingLevelID");

                    b.ToTable("TrainingLevels");
                });

            modelBuilder.Entity("webUniversity.Models.TuitionForm", b =>
                {
                    b.Property<int?>("tuitionFormlID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("tuitionFormlID"));

                    b.Property<string>("addName")
                        .HasColumnType("text");

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("tuitionFormlID");

                    b.ToTable("TuitionForms");
                });

            modelBuilder.Entity("webUniversity.Models.TuitionType", b =>
                {
                    b.Property<int?>("tuitionTypelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("tuitionTypelID"));

                    b.Property<string>("addName")
                        .HasColumnType("text");

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("tuitionTypelID");

                    b.ToTable("TuitionTypes");
                });

            modelBuilder.Entity("webUniversity.Models.User", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("userID"));

                    b.Property<int>("authID")
                        .HasColumnType("integer");

                    b.Property<string>("login")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<string>("role")
                        .HasColumnType("text");

                    b.HasKey("userID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("webUniversity.Models.Orders", b =>
                {
                    b.HasOne("webUniversity.Models.OrderType", "OrderType")
                        .WithMany("Orders")
                        .HasForeignKey("orderTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webUniversity.Models.Student", "Student")
                        .WithMany("Orders")
                        .HasForeignKey("studentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderType");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("webUniversity.Models.Specialization", b =>
                {
                    b.HasOne("webUniversity.Models.Speciality", "Speciality")
                        .WithMany("Specialization")
                        .HasForeignKey("specialityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Speciality");
                });

            modelBuilder.Entity("webUniversity.Models.Statement", b =>
                {
                    b.HasOne("webUniversity.Models.ControlForm", "ControlForm")
                        .WithMany("Statement")
                        .HasForeignKey("controlFormID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webUniversity.Models.ControlPeriod", "ControlPeriod")
                        .WithMany("Statement")
                        .HasForeignKey("controlPeriodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webUniversity.Models.Discipline", "Discipline")
                        .WithMany("Statement")
                        .HasForeignKey("disciplineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webUniversity.Models.Mark", "Mark")
                        .WithMany("Statement")
                        .HasForeignKey("markID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webUniversity.Models.Professor", "Professor")
                        .WithMany("Statement")
                        .HasForeignKey("professorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webUniversity.Models.StatementType", "StatementType")
                        .WithMany()
                        .HasForeignKey("statementTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webUniversity.Models.Student", "Student")
                        .WithMany("Statement")
                        .HasForeignKey("studentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControlForm");

                    b.Navigation("ControlPeriod");

                    b.Navigation("Discipline");

                    b.Navigation("Mark");

                    b.Navigation("Professor");

                    b.Navigation("StatementType");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("webUniversity.Models.Student", b =>
                {
                    b.HasOne("webUniversity.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("courseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webUniversity.Models.Faculty", "Faculty")
                        .WithMany("Student")
                        .HasForeignKey("facultyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webUniversity.Models.Group", "Group")
                        .WithMany("Student")
                        .HasForeignKey("groupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webUniversity.Models.Speciality", "Speciality")
                        .WithMany()
                        .HasForeignKey("specialityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webUniversity.Models.Specialization", "Specialization")
                        .WithMany()
                        .HasForeignKey("specializationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webUniversity.Models.StudentStatus", "StudentStatus")
                        .WithMany("Student")
                        .HasForeignKey("studentStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webUniversity.Models.TrainingLevel", "TrainingLevel")
                        .WithMany("Student")
                        .HasForeignKey("trainingLevelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webUniversity.Models.TuitionForm", "TuitionForm")
                        .WithMany("Student")
                        .HasForeignKey("tuitionFormID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webUniversity.Models.TuitionType", "TuitionType")
                        .WithMany("Student")
                        .HasForeignKey("tuitionTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webUniversity.Models.User", "User")
                        .WithMany("Student")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Faculty");

                    b.Navigation("Group");

                    b.Navigation("Speciality");

                    b.Navigation("Specialization");

                    b.Navigation("StudentStatus");

                    b.Navigation("TrainingLevel");

                    b.Navigation("TuitionForm");

                    b.Navigation("TuitionType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("webUniversity.Models.ControlForm", b =>
                {
                    b.Navigation("Statement");
                });

            modelBuilder.Entity("webUniversity.Models.ControlPeriod", b =>
                {
                    b.Navigation("Statement");
                });

            modelBuilder.Entity("webUniversity.Models.Discipline", b =>
                {
                    b.Navigation("Statement");
                });

            modelBuilder.Entity("webUniversity.Models.Faculty", b =>
                {
                    b.Navigation("Student");
                });

            modelBuilder.Entity("webUniversity.Models.Group", b =>
                {
                    b.Navigation("Student");
                });

            modelBuilder.Entity("webUniversity.Models.Mark", b =>
                {
                    b.Navigation("Statement");
                });

            modelBuilder.Entity("webUniversity.Models.OrderType", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("webUniversity.Models.Professor", b =>
                {
                    b.Navigation("Statement");
                });

            modelBuilder.Entity("webUniversity.Models.Speciality", b =>
                {
                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("webUniversity.Models.Student", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Statement");
                });

            modelBuilder.Entity("webUniversity.Models.StudentStatus", b =>
                {
                    b.Navigation("Student");
                });

            modelBuilder.Entity("webUniversity.Models.TrainingLevel", b =>
                {
                    b.Navigation("Student");
                });

            modelBuilder.Entity("webUniversity.Models.TuitionForm", b =>
                {
                    b.Navigation("Student");
                });

            modelBuilder.Entity("webUniversity.Models.TuitionType", b =>
                {
                    b.Navigation("Student");
                });

            modelBuilder.Entity("webUniversity.Models.User", b =>
                {
                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
